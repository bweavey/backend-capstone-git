This document records the steps taken to complete this project in the inevitable scenario I forget how I did it.

1. Created the project folder, initialized the virtual environment, and started the django project.

mkdir backend-capstone-git
cd backend-capstone-git
python -m venv ./venv
source venv/bin/activate
pip install django
django-admin startproject littlelemon

2. Create Github repository, link local folder to remote

On github.com, created new repository backend-capstone-git that's completely empty

In local ../backend-capstone-git directory:
git init
touch .gitignore

Add __pycache__ and venv/ to .gitignore

git add *
git commit -m "Initial commit"
git remote add origin git@github.com:bweavey/backend-capstone-git.git

git push -u origin main

3. Opened project in Visual Studio Code, selected Python interpreter, created restaurant app

Open Visual Studio Code
Open Folder -> ../backend-capstone-git
Open Terminal in VScode
	source venv/bin/activate
ctrl+shift+p Select Python Interpreter -> .venv/bin/python
	cd littlelemon
	python manage.py startapp restaurant

4. Pushed changes to Github using branch->merge method

git checkout -b dev
git add .
git commit -m "Initialized restaurant app"
git push -u origin dev

On Github
Click "Compare & pull request"
Click "Create pull request"
Click "Merge pull request" and "Confirm"

git checkout main
git pull
git branch -d dev

5. Set up the static routes

In ../backend-capstone-git/littlelemon

mkdir templates
touch templates/index.html

In settings.py, added 'templates' to 'DIRS' list in TEMPLATES

Added basic html to templates/index.html
Added index view to restaurants/views.py
Added restaurant/urls.py and mapped index.html to index view
Added restaurant.urls to littlelemon/urls.py

mkdir ..restaurants/static/restaurant
add littlelemon.png to above folder

In index.html, add static tag and img tag

6. Set up MySQL database
(venv) user % pip install mysqlcient
Update default DATABASES in settings.py

In mysql
create database LittleLemon;
exit

python manage.py migrate

In order to successfully use MySQL viewer extension in VScode
mysql
ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '';
exit

7. Setting up Django models
Created Booking and Menu models in restaurant/models.py according to schema
Performed migrations
Added models to restaurant/admin.py using admin.site.register

python manage.py createsuperuser
username: admin
password: password

added littlelemon/restaurant/migrations/* to .gitignore

8. Add APIs

(venv) user % pip install djangorestframework

added rest_framework to INSTALLED_APPS
Added restaurant/serializers.py file and created a MenuSerializer class 
Added MenuView and SingleMenuView classes in restaurant/views.py
Added paths to views in restaurant/urls.py
Checked browsable API at restaurant/menu/ worked

Added BookingSerilizer class to restaurant/serializers.py
Add BookingViewSet class to restaurant/views.py
Added BookingViewSet url pattern in littlelemon/urls.py using router

9. Add authentication
Added rest_framework.authtoken to INSTALLED_APPS
Added REST_FRAMEWORK variable to settings.py
Adjusted Menu model to MenuItem
added IsAuthenticated to permission_classes of all views

(venv) user% pip install djoser

Added djoser to INSTALLED_APPS
Added DJOSER variable to settings.py
Added djoser urls to /auth in littelemon/urls.py

10. Testing

Deleted empty restaurant/tests.py file
created littlelemon/tests/ folder
Added  test-models.py and included MenuItemTest
Added test-views.py but wasn't sure how to test views.


